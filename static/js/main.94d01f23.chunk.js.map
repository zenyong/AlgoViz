{"version":3,"sources":["components/slider.js","components/header.js","components/Main.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","spacing","margin","height","PrettoSlider","withStyles","color","thumb","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","DiscreteSlider","updateRange","classes","className","valueLabelDisplay","onChange","aria-label","defaultValue","min","max","Header","rangeChange","newArr","bubbleSort","quickSort","useState","val","setVal","onClick","e","data","console","log","Bar","props","currentColor","Tooltip","enterTouchDelay","placement","title","style","Main","currentIndex","map","size","i","App","setSize","array","setArray","setCurrentIndex","currentWindow","setCurrentWindow","useEffect","randarr","Array","from","length","Math","floor","random","sleep","milliseconds","Promise","resolve","setTimeout","a","j","temp","swap","items","leftIndex","rightIndex","partition","right","pivot","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94d01f23.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 300 + theme.spacing(3) * 2,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n  const { children, open, value } = props;\r\n\r\n  return (\r\n    <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n      {children}\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nconst PrettoSlider = withStyles({\r\n  root: {\r\n    color: '#ff9900',\r\n    height: 8,\r\n    width: 150,\r\n  },\r\n  thumb: {\r\n    height: 24,\r\n    width: 24,\r\n    backgroundColor: '#fff',\r\n    border: '2px solid currentColor',\r\n    marginTop: -8,\r\n    marginLeft: -12,\r\n    '&:focus, &:hover, &$active': {\r\n      boxShadow: 'inherit',\r\n    },\r\n  },\r\n  active: {},\r\n  valueLabel: {\r\n    left: 'calc(-50% + 4px)',\r\n  },\r\n  track: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n  rail: {\r\n    height: 8,\r\n    borderRadius: 4,\r\n  },\r\n})(Slider);\r\n\r\n\r\n\r\nexport default function DiscreteSlider({updateRange}) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"slider\">    \r\n        <div className={classes.root}>\r\n        <PrettoSlider valueLabelDisplay=\"auto\"  onChange={updateRange} aria-label=\"pretto slider\" defaultValue={20} min={10} max={165}/>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","import DiscreteSlider from './slider'\r\nimport { useState } from 'react';\r\n\r\nfunction Header({rangeChange, newArr, bubbleSort, quickSort}) {\r\n\r\n  const [val, setVal] = useState(20);\r\n  const updateRange = (e, data) => {\r\n    setVal(data);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n        <div className=\"set\">\r\n            <button onClick={()=>{newArr()}}>Random Array</button>\r\n            <p>Change Size: </p>\r\n            <DiscreteSlider updateRange={updateRange}  onChange={rangeChange(val)}/>\r\n        </div>\r\n        <div className=\"algo\">\r\n            <button onClick={()=>bubbleSort()}>Bubble Sort</button>\r\n            <button onClick={()=>quickSort()}>Quick sort</button>\r\n            <button onClick={()=>console.log(\"clicked\")}>Heap sort</button>\r\n            <button onClick={()=>console.log(\"clicked\")}>Merge sort</button>\r\n        </div>    \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport '../App.css';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n\r\nfunction Main({data, currentIndex}) {\r\n  return (\r\n    <div className=\"container\">\r\n        {\r\n        data.map((size, i) => <Bar height={(size)} key={i} active={currentIndex === i}/>)    \r\n        }\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Bar = (props) =>{\r\n  const currentColor = (props.active ? 'red' : '#ff9900');\r\n  return(\r\n    <>\r\n      <Tooltip enterTouchDelay={5} placement=\"top\" title={props.height}>\r\n        <div className=\"bar\" style={{'height':props.height ,'backgroundColor':currentColor} }></div>\r\n      </Tooltip>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Main;\r\n","import Header from './components/header'\nimport Main from './components/Main'\nimport './App.css';\nimport { useState , useEffect } from 'react';\n\n\nfunction App() {\n  //MAIN PARTS\n  const [size, setSize] = useState(20)\n  const [array, setArray] = useState([])\n  const [currentIndex, setCurrentIndex] = useState(null)\n  const [currentWindow, setCurrentWindow] = useState([])\n  \n  useEffect(()=>{\n    const randarr= Array.from({length: size}, ()=> Math.floor(Math.random()*500));\n    setArray(randarr);\n    console.log(randarr);\n  },[size])\n  const rangeChange = (val) =>{\n    setSize(val);\n  };\n  const newArr = () =>{\n    const randarr= Array.from({length: size}, ()=> Math.floor(Math.random()*500));\n    setArray(randarr);\n  }\n  const sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n  }\n  // END MAIN PARTS\n\n  //BUBBLE SORT\n  const bubbleSort = async () => {       \n    for (let i = 0; i < array.length; i++) {\n      await sleep(0.1)\n      for (let j = 0; j < array.length; j++) {\n         await sleep(0.1)\n        if (array[j] > array[j + 1]) {  \n          setCurrentIndex(j+1);\n          let temp = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = temp;    \n          setArray([...array]);\n          await sleep(0.5)             \n        }\n      }        \n    }\n  }\n  //END BUBBLE SORT\n\n\n  //QUICK SORT\n  function swap(items, leftIndex, rightIndex){\n    var temp = items[leftIndex];\n    items[leftIndex] = items[rightIndex];\n    items[rightIndex] = temp;\n  }\n  function partition(items, left, right) {\n    var pivot   = items[Math.floor((right + left) / 2)], //middle element\n      i       = left, //left pointer\n      j       = right; //right pointer\n    while (i <= j) {\n      while (items[i] < pivot) {\n        i++;\n      }\n      while (items[j] > pivot) {\n        j--;\n      }\n      if (i <= j) {\n        swap(items, i, j); //sawpping two elements\n        i++;\n        j--;\n      }\n    }\n    setCurrentWindow([i, j])\n    return i;\n  }\n  const quickSort = async (items, left, right) =>{\n    var index;\n    if (items.length > 1) {\n      index = partition(items, left, right); //index returned from partition\n      if (left < index - 1) { //more elements on the left side of the pivot\n        await sleep(500);\n        quickSort(items, left, index - 1);\n      }\n      if (index < right) { //more elements on the right side of the pivot\n        await sleep(500);  \n        quickSort(items, index, right);\n      }\n      await sleep(500); \n      setArray([...items]);\n    }\n  }\n  //END QUICK SORT\n\n  //VIEWS\n  return (\n    <div className=\"App\">\n      <Header rangeChange={rangeChange} newArr={newArr} bubbleSort={bubbleSort} quickSort={()=>{quickSort(array, 0, array.length-1)}}/>\n      <Main data={array} currentIndex={currentIndex} currentWindow={currentWindow}/>\n    </div>\n  );\n  //END VIEWS\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}